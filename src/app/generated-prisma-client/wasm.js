
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  email: 'email',
  name: 'name',
  password: 'password',
  role: 'role',
  officeAddress: 'officeAddress',
  city: 'city'
};

exports.Prisma.PatientScalarFieldEnum = {
  id: 'id',
  name: 'name',
  dni: 'dni',
  email: 'email',
  phone: 'phone',
  dateOfBirth: 'dateOfBirth',
  address: 'address',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  professionalId: 'professionalId'
};

exports.Prisma.SpecialtyScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.ClinicalHistoryScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  patientId: 'patientId'
};

exports.Prisma.VisitScalarFieldEnum = {
  id: 'id',
  visitDate: 'visitDate',
  reason: 'reason',
  epicrisis: 'epicrisis',
  diagnosis: 'diagnosis',
  treatment: 'treatment',
  clinicalHistoryId: 'clinicalHistoryId',
  professionalId: 'professionalId'
};

exports.Prisma.MedicalStudyScalarFieldEnum = {
  id: 'id',
  fileName: 'fileName',
  fileUrl: 'fileUrl',
  fileType: 'fileType',
  uploadedAt: 'uploadedAt',
  visitId: 'visitId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  PROFESIONAL: 'PROFESIONAL'
};

exports.Prisma.ModelName = {
  User: 'User',
  Patient: 'Patient',
  Specialty: 'Specialty',
  ClinicalHistory: 'ClinicalHistory',
  Visit: 'Visit',
  MedicalStudy: 'MedicalStudy'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\clinicas\\src\\app\\generated-prisma-client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\clinicas\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// Define database connection via the `DATABASE_URL` env var\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// Define custom output path for generated Prisma Client\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/app/generated-prisma-client\"\n}\n\n// Example data model\nmodel User {\n  id        Int      @id @default(autoincrement())\n  createdAt DateTime @default(now())\n  email     String   @unique\n  name      String?\n  password  String\n  role      Role     @default(PROFESIONAL)\n\n  // Location fields for professionals\n  officeAddress String?\n  city          String?\n\n  patients    Patient[]\n  visits      Visit[]\n  specialties Specialty[] @relation(\"ProfessionalSpecialties\")\n}\n\nmodel Patient {\n  id          Int       @id @default(autoincrement())\n  name        String\n  dni         String    @unique\n  email       String    @unique\n  phone       String?\n  dateOfBirth DateTime? @map(\"date_of_birth\")\n  address     String?\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n\n  professional    User             @relation(fields: [professionalId], references: [id])\n  professionalId  Int\n  clinicalHistory ClinicalHistory?\n}\n\nenum Role {\n  ADMIN\n  PROFESIONAL\n}\n\nmodel Specialty {\n  id            Int    @id @default(autoincrement())\n  name          String @unique\n  professionals User[] @relation(\"ProfessionalSpecialties\")\n}\n\nmodel ClinicalHistory {\n  id        Int      @id @default(autoincrement())\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  patient   Patient  @relation(fields: [patientId], references: [id])\n  patientId Int      @unique\n  visits    Visit[]\n}\n\nmodel Visit {\n  id                Int             @id @default(autoincrement())\n  visitDate         DateTime        @default(now())\n  reason            String\n  epicrisis         String          @db.Text\n  diagnosis         String\n  treatment         String\n  clinicalHistory   ClinicalHistory @relation(fields: [clinicalHistoryId], references: [id])\n  clinicalHistoryId Int\n  professional      User            @relation(fields: [professionalId], references: [id])\n  professionalId    Int\n  studies           MedicalStudy[]\n}\n\nmodel MedicalStudy {\n  id         Int      @id @default(autoincrement())\n  fileName   String\n  fileUrl    String\n  fileType   String\n  uploadedAt DateTime @default(now())\n  visit      Visit    @relation(fields: [visitId], references: [id])\n  visitId    Int\n}\n",
  "inlineSchemaHash": "8d0cffd26ecb87f8d9b689cb62ed237dc77422673b970d5dad9ad4592cd5d1f6",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"officeAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patients\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"PatientToUser\"},{\"name\":\"visits\",\"kind\":\"object\",\"type\":\"Visit\",\"relationName\":\"UserToVisit\"},{\"name\":\"specialties\",\"kind\":\"object\",\"type\":\"Specialty\",\"relationName\":\"ProfessionalSpecialties\"}],\"dbName\":null},\"Patient\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dni\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateOfBirth\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_of_birth\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"professional\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PatientToUser\"},{\"name\":\"professionalId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"clinicalHistory\",\"kind\":\"object\",\"type\":\"ClinicalHistory\",\"relationName\":\"ClinicalHistoryToPatient\"}],\"dbName\":null},\"Specialty\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"professionals\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProfessionalSpecialties\"}],\"dbName\":null},\"ClinicalHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"ClinicalHistoryToPatient\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"visits\",\"kind\":\"object\",\"type\":\"Visit\",\"relationName\":\"ClinicalHistoryToVisit\"}],\"dbName\":null},\"Visit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"visitDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"epicrisis\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"diagnosis\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"treatment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clinicalHistory\",\"kind\":\"object\",\"type\":\"ClinicalHistory\",\"relationName\":\"ClinicalHistoryToVisit\"},{\"name\":\"clinicalHistoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"professional\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToVisit\"},{\"name\":\"professionalId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"studies\",\"kind\":\"object\",\"type\":\"MedicalStudy\",\"relationName\":\"MedicalStudyToVisit\"}],\"dbName\":null},\"MedicalStudy\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploadedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"visit\",\"kind\":\"object\",\"type\":\"Visit\",\"relationName\":\"MedicalStudyToVisit\"},{\"name\":\"visitId\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

